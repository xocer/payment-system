services:
  keycloak:
    image: quay.io/keycloak/keycloak:26.2
    container_name: individuals-keycloak
    command: start-dev --import-realm
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
    volumes:
      - ./individuals-api/resources/realm-config.json:/opt/keycloak/data/import/realm-config.json
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  keycloak-postgres:
    image: postgres:17
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5


  individuals-api:
    build:
      context: ./individuals-api
    container_name: individuals-api
    depends_on:
      - keycloak
    ports:
      - "8081:8081"
#    networks:
#      - keycloak_net

#  individuals-api:
#    build: ./individuals-api
#    container_name: individuals-api
#    ports:
#      - "8081:8081"
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#    depends_on:
#      keycloak:
#        condition: service_healthy
#      prometheus:
#        condition: service_healthy
#      loki:
#        condition: service_healthy
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5

#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#    healthcheck:
#      test: [ "CMD", "wget", "--spider", "http://localhost:9090/-/healthy" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5

#  loki:
#    image: grafana/loki:2.9.2
#    container_name: loki
#    ports:
#      - "3100:3100"
#    command: -config.file=/etc/loki/local-config.yaml
#    volumes:
#      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml
#    healthcheck:
#      test: ["CMD", "wget", "--spider", "http://localhost:3100/ready"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

#  grafana:
#    image: grafana/grafana:10.3.1
#    container_name: grafana
#    ports:
#      - "3000:3000"
#    depends_on:
#      prometheus:
#        condition: service_healthy
#      loki:
#        condition: service_healthy
#    environment:
#      GF_SECURITY_ADMIN_USER: admin
#      GF_SECURITY_ADMIN_PASSWORD: admin
#    volumes:
#      - ./grafana/provisioning:/etc/grafana/provisioning
#      - ./grafana/dashboards:/var/lib/grafana/dashboards
#    healthcheck:
#      test: ["CMD", "wget", "--spider", "http://localhost:3000/api/health"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
